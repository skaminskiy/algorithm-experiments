Insertion sort, merge sort, heapsort, and quicksort are all comparison sorts: they
determine the sorted order of an input array by comparing elements. Chapter 8 begins
by introducing the decision-tree model in order to study the performance limitations
of comparison sorts. Using this model, we prove a lower bound of Big Omega(nlgn)
on the worst-case running time of any comparison sort on n inputs, thus showing
that heapsort and merge sort are asymptotically optimal comparison sorts.

We can beat this lower bound of Big Omega(nlgn)
if we can gather information about the sorted order of the input by means other
than comparing elements. The counting sort algorithm, for example, assumes that
the input numbers are in the set {0; 1; : : : ; k}.

By using array indexing as a tool
for determining relative order, counting sort can sort n numbers in Big Theta(k + n) time.
Thus, when k = O(n), counting sort runs in time that is linear in the size of the
input array.